<%- layout('layouts/main.ejs') %>

<!-- If not authenticated -->
<% if(!isAuthenticated){ %>
  <h1 class="text-center">Welcome to PlayB</h1>
  <br>
  <div style="max-width:100vw">
    <figure class="border p-5">
        <h3>Upload your songs</h3>
    </figure>
  
    <figure class="border p-5 text-end">
        <h3>Associate them to labels</h3>
    </figure>

    <figure class="border p-5">
      <h3>Play your songs</h3>
    </figure>

    <figure class="border p-5 text-center">
      <h3 class="mb-4">Start now!</h3>
      <a href="/signup" class="btn btn-primary btn-lg">Sign up</a>
  </figure>
  </div>
  <!-- If authenticated -->
<% } else{ %> 
  <h1 class="text-center" id="playing">Now playing</h1>
  <br>
  <!-- Player -->
  <div class="card p-2 mx-auto" style="max-width: 28rem;">
      <div class="card-body text-center">
        <h5 class="card-title" id="title">Music player</h5>
        <!-- Div to add audio -->
        <div id="player"></div>
        <!-- Volume -->
        <div class="text-center p-2">
          <div class="btn-group dropend">
            <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false" id="volume">
              <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-volume-down-fill" viewBox="0 0 16 16">
                <path d="M9 4a.5.5 0 0 0-.812-.39L5.825 5.5H3.5A.5.5 0 0 0 3 6v4a.5.5 0 0 0 .5.5h2.325l2.363 1.89A.5.5 0 0 0 9 12V4zm3.025 4a4.486 4.486 0 0 1-1.318 3.182L10 10.475A3.489 3.489 0 0 0 11.025 8 3.49 3.49 0 0 0 10 5.525l.707-.707A4.486 4.486 0 0 1 12.025 8z"/>
              </svg>
            </button>
            <ul class="dropdown-menu p-2">
              <!-- <input type="range" class="form-range" id="volume" min="0" max="100" step="1"></input> -->
              <input class="mt-1" id="vol-control" type="range" min="0" max="100" step="1" value="100" oninput="volume(this.value)" onchange="volume(this.value)" style="width: 100%;">
            </ul>
          </div>
        </div>
        <!-- Back button -->
        <button type="button" class="btn btn-secondary btn-sq-lg" id="back" onclick="back()">
          <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-skip-backward-circle-fill" viewBox="0 0 16 16">
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.79-2.907L8.5 7.028V5.5a.5.5 0 0 0-.79-.407L5 7.028V5.5a.5.5 0 0 0-1 0v5a.5.5 0 0 0 1 0V8.972l2.71 1.935a.5.5 0 0 0 .79-.407V8.972l2.71 1.935A.5.5 0 0 0 12 10.5v-5a.5.5 0 0 0-.79-.407z"/>
          </svg>
        </button>
        <!-- Play/Pause button -->
        <button type="button" class="btn btn-secondary" id="play" onclick="play()">
          <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-play-circle-fill" viewBox="0 0 16 16">
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z"/>
          </svg>
        </button>
        <button type="button" class="btn btn-secondary" id="pause" onclick="pause()">
          <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-pause-circle-fill" viewBox="0 0 16 16">
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.25 5C5.56 5 5 5.56 5 6.25v3.5a1.25 1.25 0 1 0 2.5 0v-3.5C7.5 5.56 6.94 5 6.25 5zm3.5 0c-.69 0-1.25.56-1.25 1.25v3.5a1.25 1.25 0 1 0 2.5 0v-3.5C11 5.56 10.44 5 9.75 5z"/>
          </svg>
        </button>
        <!-- Forward button -->
        <button type="button" class="btn btn-secondary" id="forward" onclick="forward()">
          <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-skip-forward-circle-fill" viewBox="0 0 16 16">
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.79 5.093A.5.5 0 0 0 4 5.5v5a.5.5 0 0 0 .79.407L7.5 8.972V10.5a.5.5 0 0 0 .79.407L11 8.972V10.5a.5.5 0 0 0 1 0v-5a.5.5 0 0 0-1 0v1.528L8.29 5.093a.5.5 0 0 0-.79.407v1.528L4.79 5.093z"/>
          </svg>
        </button>
        
      </div>
  </div>
  <!-- List -->
  <div class="card p-2 mx-auto" style="max-width: 28rem;">
    <div class="card-body">
        <h5 class="card-title text-center">My playlist</h5>
        <% if(playlist.length == 0){ %> <!-- If empty playlist -->
            <div class="card">
                <div class="card-body text-center">
                  <h5 class="card-title">No songs in playlist</h5>
                </div>
            </div>
        <% } else{ %> <!-- If playlist -->
          <ul class="list-group">
                <% playlist.forEach(function(track){ %>
                  <li class="list-group-item" id="<%= track.id %>" onclick="playSelected(this.id)"><%= track.name %></li>
                <% }); %>
          </ul>
        <% } %>
    </div>
  </div>

  <script>
    //Get playlist
    const tracks = <%- JSON.stringify(playlist) %>;
    
    //Counter
    var i= 0;
    //Get div
    const player= document.getElementById('player');
    //Create elements
    var audio= document.createElement('audio');
    var source= document.createElement('source');
    var div= document.createElement('div');
    div.classList.add('p-2');

    function *enumerate(array) {
      for (let i = 0; i < array.length; i += 1) {
          yield [i, array[i]];
      }
    }
    //Enumerate tracks
    const tracks_list= []
    for (let x of enumerate(tracks)) {
      tracks_list.push(x);  
    }

    //Funtion to play
    function playAudio(track){  
      //Set up audio
      //audio.setAttribute('controls', '');
      //Add track id to source
      source.setAttribute('src', 'http://localhost:3000/tracks/'+track.file_id);
      //Append elements
      player.appendChild(audio);
      audio.appendChild(source);
      //Load and play audio
      audio.load();
      const playPromise = audio.play();
      if (playPromise !== null){
        playPromise.catch(() => { audio.play(); })
      }

      //Set name
      document.getElementById("title").innerHTML = track.name;
      //Set play button
      play();
      //Active row if play
      document.getElementById(track._id).classList.add("active");
      //Update time
      audio.ontimeupdate = function(){
        //time()
        player.appendChild(div);
        //<h6 class="card-title" id="title">Music player</h6>
        div.innerHTML = '<h6 class="card-title">' + 
                        formatSecondsAsTime(audio.currentTime) + ' / ' + formatSecondsAsTime(tracks_list[i][1].duration) +
                        '</h6>';
      };
    }
    //Play track
    playAudio(tracks_list[i][1]);
    //Check if audio is playing
    const played= (!audio.paused)? play(): pause();
    
    //Format seconds to minutes
    function formatSecondsAsTime(secs, format) {
      var hr  = Math.floor(secs / 3600);
      var min = Math.floor((secs - (hr * 3600))/60);
      var sec = Math.floor(secs - (hr * 3600) -  (min * 60));

      if (min < 10){ 
        min = "0" + min; 
      }
      if (sec < 10){ 
        sec  = "0" + sec;
      }

      return min + ':' + sec;
    }
    
    //Buttons functions
    function play(){
      audio.play();
      //Hide play
      document.getElementById("play").style.display= "none";
      //Show pause
      document.getElementById("pause").style.display= "";
      //Rename title if playlist end and user select other song
      document.getElementById("playing").innerHTML = "Now playing";
    }

    function pause(){
      audio.pause();
      //Hide pause
      document.getElementById("pause").style.display= "none";
      //Show play
      document.getElementById("play").style.display= "";
    }

    function back(){
      try {
        //Deactive row
        document.getElementById(tracks_list[i][1]._id).classList.remove("active");
        //Update counter and play
        i-= 1
        playAudio(tracks_list[i][1])
      } catch (err) {
        //Previous counter value
        i+=1;
        //Active row
        document.getElementById(tracks_list[i][1]._id).classList.add("active");
      }
      
    }

    function forward(){
      try {
        //Deactive row
        document.getElementById(tracks_list[i][1]._id).classList.remove("active");
        //Update counter and play
        i+= 1
        playAudio(tracks_list[i][1])
      } catch (err) {
        //Previous counter value
        i-=1;
        //Active row
        document.getElementById(tracks_list[i][1]._id).classList.add("active");
      }
      
    }

    function volume(val){
      audio.volume = val / 100;
    }

    //When finish
    audio.onended = function() {
      //Check if playlist is over
      if(i < tracks.length-1){
        //Deactive row when finish
        document.getElementById(tracks[i]._id).classList.remove("active");
        //Add counter and play
        i++;
        playAudio(tracks[i])
      }
      else{
        document.getElementById("playing").innerHTML = "Playlist has ended";
      }
    }

    //Play selected track
    function playSelected(id){
      //Search track by id in tracks list
      for(const track of tracks_list){
        if(track[1]._id == id){
          //Play audio and set counter
          playAudio(track[1]);
          i= track[0];
        }
        else{
          //Deactive other rows
          document.getElementById(track[1]._id).classList.remove("active");
        }
      }
    }
  </script>
<% } %>